install.packages("tidyverse")
library("tidyverse")

daily_activity <- read.csv("C:/Users/HP/OneDrive/Desktop/FitabaseData/dailyActivity_merged.csv")

sleep <- read.csv("C:/Users/HP/OneDrive/Desktop/FitabaseData/sleepDay_merged.csv")

weight <- read.csv("C:/Users/HP/OneDrive/Desktop/FitabaseData/weightLogInfo_merged.csv")


########## PROCESS PHASE

##### Error checks

n_distinct(daily_activity$Id) # 33 unique IDs, but there should be 30 
n_distinct(sleep$Id) # 24 unique IDs
n_distinct(weight$Id) # 8 unique IDs


sum(is.na(daily_activity)) # 0 NA values
sum(is.na(sleep)) # 0 NA values
sum(is.na(weight)) # 65 NA values
sum(is.na(weight$Fat)) # The 65 NA values are all contained in the Fat column. Users did not record their body fat percentage. Column can be dropped


sum(duplicated(daily_activity)) # 0 duplicated entries
sum(duplicated(sleep)) # 3 duplicated entries
sum(duplicated(weight)) # 0 duplicated entries


str(daily_activity) # Date should be integer type 
str(sleep) # Date should be integer type
str(weight) # IsManualReport should be logical type, date integer type


sum(daily_activity$LoggedActivitiesDistance == 0) # 908 entries out of 940 are zero in this column


##### Data cleaning and transformation

daily_activity_cleaned <- daily_activity %>% 
  mutate(Date = as.Date(ActivityDate, "%m/%d/%Y")) %>% # Changing Date variable to Date type
  select(-ActivityDate, -TrackerDistance, -LoggedActivitiesDistance) %>% # Dropping unnecessary columns
  select(1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12) # Reordering columns
View(daily_activity_cleaned)


sleep_cleaned <- sleep %>%
  distinct() %>% # Removing duplicate entries
  separate(SleepDay, into=c("Date", "Time"), sep = " ") %>% # Dividing  Date Time column into two
  mutate(Date = as.Date(Date, "%m/%d/%Y")) %>% # Changing Date variable to Date type
  select(-Time, -TotalSleepRecords) %>% # Dropping unnecessary columns
  mutate(TimeAwake = TotalTimeInBed - TotalMinutesAsleep) # Adding TimeAwake column
View(sleep_cleaned)


weight_cleaned <- weight %>%
  separate(Date, into=c("Date", "Time"), sep = " ") %>% # Dividing  Date Time column into two
  mutate(Date = as.Date(Date, "%m/%d/%Y")) %>% # Changing Date variable to Date type
  select(-Time, -Fat, -LogId) # Dropping unnecessary columns
View(weight_cleaned)


merged_activity_weight <- merge(daily_activity_cleaned, weight_cleaned, by.x=c("Id", "Date"), by.y=c("Id", "Date"))
str(merged_activity_weight)

# Because weight_cleaned contains 67 observations, this merged data contains the 67 observations by the 8 users common between weight_cleaned and daily_activity_cleaned


merged_activity_sleep <- merge(daily_activity_cleaned, sleep_cleaned, by.x=c("Id", "Date"), by.y=c("Id", "Date"))
str(merged_activity_sleep)

# This data frame contains 410 observations from the 24 users common between sleep_cleaned and daily_activity_cleaned


merged_data <- merge(merged_activity_weight, sleep_cleaned, by.x=c("Id", "Date"), by.y=c("Id", "Date"))
str(merged_data)

# This data frame contains 35 observations based on the ID and dates common amongst all 3 datasets

# 35 observations are not enough for a sound, robust, high level analysis
# I will use the daily_activity_cleaned dataset for most of my analysis because it contains 940 observations
# I will use the other datasets only when I have to consider weight and sleep in my analysis


########## ANALYZE PHASE

# Checking the summary statistics of the 3 datasets
summary(daily_activity_cleaned)
summary(sleep_cleaned)
summary(weight_cleaned)

# Checking how users track their weight
weight_cleaned %>% 
  filter(IsManualReport == "True") %>% 
  group_by(Id) %>% 
  summarise("Manual Weight Report"=n()) %>%
  distinct()

weight_cleaned %>% 
  filter(IsManualReport == "False") %>% 
  group_by(Id) %>% 
  summarise("Automatic Weight Report"=n()) %>%
  distinct()
# 5 users logged their weight manually. Of these, 4 did so infrequently
# 3 users logged their weight automatically through a WiFi conencted device. Of these, 2 did so only once


# Are users falling asleep in a proper time frame
# According to healthline, which  has strict sourcing guidelines, normal sleep for adults means falling asleep within 10 to 20 minutes
sleep_cleaned %>% 
  filter(TimeAwake > 20) %>% 
  group_by(Id) %>% 
  summarise("Sleep problem"=n()) %>%
  distinct()
# Twenty people out of twenty four took more than 20 minutes to fall asleep
# 5 users had a recurring problem with falling asleep within 20 minutes (more than 20 times over the 2 month time frame)
# If this is a regular occurence for a user, then they may have insomnia or must be on their phones etc.


# Are users getting enough VeryActive and FairlyActive minutes
# At least 150 minutes of moderate activity or 75 minutes of vigorous activity a week
# i.e. at least 22 minutes of moderate activity or 11 minutes of vigorous activity a day
# According to Edward R. Laskowski, M.D., in his MayoClinic post
daily_activity_cleaned %>% 
  filter(FairlyActiveMinutes >= 22 | VeryActiveMinutes >= 11) %>% 
  group_by(Id) %>% 
  summarise("Active enough"=n()) %>%
  distinct()%>%
  print(n = 30)
# 30 users met the guideline for activity duration on at least one occasion
# Of these 30, 10 users got in the required duration of activity frequently (more than 20 times over the 2 month time frame)
# The 3rd quartile of fairly active minutes is 19. Less than 25% of observations were collected where users got in the required duration of moderate activity
# The mean of very active minutes is 21.16. More than 50% of observations were collected where users got in more than the required duration of vigorous activity


# Are users getting enough steps
# Less than 5000 steps is considered sedentary
# 10,000 steps is a good aim for general fitness
# According to Jennifer Huizen in her Medical News Today post, reviewed by Debra Rose Wilson, Ph.D., MSN
daily_activity_cleaned %>% 
  filter(TotalSteps > 10000) %>% 
  group_by(Id) %>% 
  summarise("Enough steps"=n()) %>%
  distinct()%>%
  print(n = 25)

daily_activity_cleaned %>% 
  filter(TotalSteps < 5000) %>% 
  group_by(Id) %>% 
  summarise("Not enough steps"=n()) %>%
  distinct()%>%
  print(n = 33)
# 25 users recorded getting more than 10,000 on at least one occasion 
# Of these 25, only 7 users achieved 10,000 steps frequently (more than 20 times over the 2 month time frame)
# All 33 users recorded getting less than 5000 on at least one occasion
# Of these 33, 5 users took less than 5000 steps frequently (more than 20 times over the 2 month time frame)
# Should look at average steps
# It is near the 3rd quartile that 10000 is achieved i.e for ~75% of observations users did not take enough steps


# Are users getting enough sleep
# At least 7 hours of sleep is necessary i.e. 420 minutes every night
sleep_cleaned %>% 
  filter(TotalMinutesAsleep > 420) %>% 
  group_by(Id) %>% 
  summarise("Enough sleep"=n()) %>%
  distinct()%>%
  print(n = 21)

sleep_cleaned %>% 
  filter(TotalMinutesAsleep < 420) %>% 
  group_by(Id) %>% 
  summarise("Not enough sleep"=n()) %>%
  distinct()%>%
  print(n = 23)
# 21 users got enough sleep on at least one occasion
# Out of these 21, only 3 users got more than 7 hours of sleep frequently (more than 20 times over the 2 month time frame) 
# 23 users did not get enough sleep on at least one occasion
# Out of these 23, only 2 users got less than 7 hours of sleep frequently (more than 20 times over the 2 month time frame) 
# Should look at average minutes asleep
# The average is 419.2 minutes, which is according to the guideline
# The 1st Quartile is 361 minutes i.e. 6 hours
# The 2nd quartile is 490 minutes i.e. just above 8 hours
# Most of the time i.e. 50% of the observations in this dataset, users got between 6 to 8 hours of sleep


# Plotting Calories Burned vs Steps Taken
ggplot(data=daily_activity_cleaned, aes(x=TotalSteps, y = Calories, color=TotalDistance))+ 
  geom_point()+ 
  geom_smooth(method='loess')+
  scale_color_gradient(low="steelblue", high="red")+
  labs(title = 'Calories Burned vs Steps Taken') +
  xlab('Total Steps') +
  ylab('Calories Burned')
# As expected, more steps leads to more calories burned, as more distance is covered


# Plotting Calories Burned vs Distance Covered
ggplot(data=daily_activity_cleaned) +
  geom_smooth(method='loess', aes(x = VeryActiveDistance, y = Calories), color = "red") +
  geom_smooth(method='loess', aes(x = ModeratelyActiveDistance, y = Calories), color = "yellow") +
  geom_smooth(method='loess', aes(x = LightActiveDistance, y = Calories), color = "green") +
  geom_smooth(method='loess', aes(x = SedentaryActiveDistance, y = Calories), color = "blue") +
  annotate("text", x = c(15,7,10.1), y = c(3820, 2150,3250), label = c("Very Active", "Moderately Active", "Lightly Active") , color="black", size=4, fontface="bold") +
  labs(title = 'Calories Burned vs Distance Covered') +
  xlab('Distance Covered') +
  ylab('Calories Burned')
# How users cover their distance affects how many calories are burned
# Surprisingly, beyond 5 km, covering distance in a lightly active way burns more energy than covering the distance in a moderately active way 


# Plotting Calories Burned vs Minutes Active
ggplot(data=daily_activity_cleaned) + 
  geom_smooth(method='loess', aes(x = VeryActiveMinutes, y = Calories), color = "red") +
  geom_smooth(method='loess', aes(x = FairlyActiveMinutes, y = Calories), color = "yellow") +
  geom_smooth(method='loess', aes(x = LightlyActiveMinutes, y = Calories), color = "green") +
  geom_smooth(method='loess', aes(x = SedentaryMinutes, y = Calories), color = "blue") +
  annotate("text", x = c(265,215,580,850), y = c(4250, 1970,2800,2200), label = c("Very Active", "Moderately Active", "Lightly Active", "Sedentary") , color="black", size=4, fontface="bold") +
  labs(title = 'Calories Burned vs Minutes Active') +
  xlab('Active Minutes') +
  ylab('Calories Burned')
# As expected, higher activity levels burn more calories
# Again, being fairly active for a longer time is at least as, if not more, productive than being fairly active for a shorter time

